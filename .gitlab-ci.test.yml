.run-tests:
  extends: .web-build
  tags:
    - custom-runner
  cache:
    policy: pull

.run-pre-build-tests:
  extends: .run-tests
  stage: pre-build
  needs: ["prepare-unbuilt-version"]
  rules:
    - if: $CI_MERGE_REQUEST_ID ||
          $CI_COMMIT_TAG ||
          $CI_PIPELINE_SOURCE == "schedule" ||
          $CI_COMMIT_BRANCH == "master"
      when: never
    - if: $CI_COMMIT_BRANCH
  allow_failure: true

.run-local-tests:
  variables: &run-local-tests-variables
    TEST_BROWSER: chrome

.run-remote-tests:
  variables: &run-remote-tests-variables
    TEST_REMOTE_HOST: selenium-hub

.run-unit-tests:
  extends: .run-pre-build-tests
  coverage: '/^Coverage\s-\s(\d+(?:\.\d+)?%)/'
  after_script:
    - coverage=$(grep '^All files.*' test.out | cut -d '|' -f 2 | tr -d ' ')
    - echo "Coverage - ${coverage}%"
    - rm test.out

run-local-unit-tests:
  extends: .run-unit-tests
  variables:
    <<: *run-local-tests-variables
  script:
    - >
      grunt test-unit-local --headless --browser=${TEST_BROWSER} --seleniumVersion=${LOCAL_SELENIUM_VERSION}
      --chromeVersion=${LOCAL_CHROME_VERSION} | tee test.out

.run-remote-unit-tests:
  extends: .run-unit-tests
  variables:
    <<: *run-remote-tests-variables
  script:
    - >
      grunt test-unit-remote --headless --browser=${TEST_BROWSER} --ownServerHost="${TEST_OWN_SERVER_HOST}"
      --remoteHost=${TEST_REMOTE_HOST} --seleniumVersion=${REMOTE_SELENIUM_VERSION}
      --chromeVersion=${REMOTE_CHROME_VERSION} --firefoxVersion=${REMOTE_FIREFOX_VERSION} | tee test.out

run-remote-unit-tests-chrome:
  extends: .run-remote-unit-tests
  variables:
    TEST_BROWSER: chrome

run-remote-unit-tests-firefox:
  extends: .run-remote-unit-tests
  variables:
    TEST_BROWSER: firefox

.run-functional-tests:
  artifacts: &run-functional-tests-artifacts
    name: ${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}
    expire_in: 1 month
    when: always
    paths:
      - 'test_reports/test-functional*'

run-local-modules-functional-tests:
  extends: .run-pre-build-tests
  variables:
    <<: *run-local-tests-variables
  script:
    - grunt buildStyles
    - npm start &
    - >
      grunt test-functional-local --functionalSuites=tests/functional/modules/**/!\(*Script\).js --headless
      --browser=${TEST_BROWSER} --seleniumVersion=${LOCAL_SELENIUM_VERSION} --chromeVersion=${LOCAL_CHROME_VERSION}
  artifacts: &run-functional-tests-artifacts

.run-remote-modules-functional-tests:
  extends: .run-pre-build-tests
  variables:
    <<: *run-remote-tests-variables
  script:
    - grunt buildStyles
    - npm start &
    - >
      grunt test-functional-remote --functionalSuites=tests/functional/modules/**/!\(*Script\).js --headless
      --browser=${TEST_BROWSER} --ownServerHost="${TEST_OWN_SERVER_HOST}" --remoteHost=${TEST_REMOTE_HOST}
      --seleniumVersion=${REMOTE_SELENIUM_VERSION} --chromeVersion=${REMOTE_CHROME_VERSION}
      --firefoxVersion=${REMOTE_FIREFOX_VERSION}
  artifacts: &run-functional-tests-artifacts

run-remote-modules-functional-tests-chrome:
  extends: .run-remote-modules-functional-tests
  variables:
    TEST_BROWSER: chrome

run-remote-modules-functional-tests-firefox:
  extends: .run-remote-modules-functional-tests
  variables:
    TEST_BROWSER: firefox

run-scheduled-remote-functional-tests:
  extends: .run-tests
  stage: test-deploy
  variables:
    <<: *run-remote-tests-variables
    SERVER_URL: https://${DEV_PUBLIC_HOSTNAME}
    TEST_BROWSER: chrome
    TEST_ROLE: administrator
  script:
    - >
      grunt test-functional-remote --serverUrl="${SERVER_URL}" --user="${REDMIC_TEST_USER}" --pass="${REDMIC_TEST_PASS}"
      --role=${TEST_ROLE} --suitesGroups="${SUITES_GROUPS}" --browser=${TEST_BROWSER} --remoteHost=${TEST_REMOTE_HOST}
      --seleniumVersion=${REMOTE_SELENIUM_VERSION} --chromeVersion=${REMOTE_CHROME_VERSION}
      --firefoxVersion=${REMOTE_FIREFOX_VERSION}
  dependencies: []
  artifacts: &run-functional-tests-artifacts
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
